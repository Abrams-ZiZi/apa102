
apa102_demo_strip.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000358  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003ac  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003dc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  00000418  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001a5b  00000000  00000000  000004f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a4d  00000000  00000000  00001f4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007db  00000000  00000000  00002998  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000224  00000000  00000000  00003174  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006d5  00000000  00000000  00003398  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b97  00000000  00000000  00003a6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  00004604  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 a1 00 	call	0x142	; 0x142 <main>
  78:	0c 94 aa 01 	jmp	0x354	; 0x354 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <_ZN11APALEDStripC1Ev>:
	leds[x][2] = G;
	leds[x][3] = R;
}

void APALEDStrip::setLEDbrightness(uint8_t x, uint8_t brightness) {
	leds[x][0] = 224 + brightness;
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	ec 01       	movw	r28, r24
  86:	0e 94 9f 01 	call	0x33e	; 0x33e <_ZN3SPI7SPIinitEv>
  8a:	fe 01       	movw	r30, r28
  8c:	ce 01       	movw	r24, r28
  8e:	80 51       	subi	r24, 0x10	; 16
  90:	9f 4f       	sbci	r25, 0xFF	; 255
  92:	20 ee       	ldi	r18, 0xE0	; 224
  94:	20 83       	st	Z, r18
  96:	11 82       	std	Z+1, r1	; 0x01
  98:	12 82       	std	Z+2, r1	; 0x02
  9a:	13 82       	std	Z+3, r1	; 0x03
  9c:	34 96       	adiw	r30, 0x04	; 4
  9e:	e8 17       	cp	r30, r24
  a0:	f9 07       	cpc	r31, r25
  a2:	c1 f7       	brne	.-16     	; 0x94 <_ZN11APALEDStripC1Ev+0x14>
  a4:	df 91       	pop	r29
  a6:	cf 91       	pop	r28
  a8:	08 95       	ret

000000aa <_ZN11APALEDStrip6setLEDEhhhhh>:
  aa:	ef 92       	push	r14
  ac:	0f 93       	push	r16
  ae:	fc 01       	movw	r30, r24
  b0:	34 e0       	ldi	r19, 0x04	; 4
  b2:	63 9f       	mul	r22, r19
  b4:	e0 0d       	add	r30, r0
  b6:	f1 1d       	adc	r31, r1
  b8:	11 24       	eor	r1, r1
  ba:	80 ee       	ldi	r24, 0xE0	; 224
  bc:	8e 0d       	add	r24, r14
  be:	80 83       	st	Z, r24
  c0:	01 83       	std	Z+1, r16	; 0x01
  c2:	22 83       	std	Z+2, r18	; 0x02
  c4:	43 83       	std	Z+3, r20	; 0x03
  c6:	0f 91       	pop	r16
  c8:	ef 90       	pop	r14
  ca:	08 95       	ret

000000cc <_ZN11APALEDStrip7refreshEv>:
}

void APALEDStrip::refresh() {
  cc:	cf 92       	push	r12
  ce:	df 92       	push	r13
  d0:	ef 92       	push	r14
  d2:	ff 92       	push	r15
  d4:	0f 93       	push	r16
  d6:	1f 93       	push	r17
  d8:	cf 93       	push	r28
  da:	6c 01       	movw	r12, r24
	for (uint8_t i = 0; i < 4; i++) {
		SPI::SPIsend(0);
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	0e 94 a5 01 	call	0x34a	; 0x34a <_ZN3SPI7SPIsendEh>
  e2:	80 e0       	ldi	r24, 0x00	; 0
  e4:	0e 94 a5 01 	call	0x34a	; 0x34a <_ZN3SPI7SPIsendEh>
  e8:	80 e0       	ldi	r24, 0x00	; 0
  ea:	0e 94 a5 01 	call	0x34a	; 0x34a <_ZN3SPI7SPIsendEh>
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	0e 94 a5 01 	call	0x34a	; 0x34a <_ZN3SPI7SPIsendEh>
  f4:	76 01       	movw	r14, r12
  f6:	80 ef       	ldi	r24, 0xF0	; 240
  f8:	c8 0e       	add	r12, r24
  fa:	d1 1c       	adc	r13, r1

void APALEDStrip::setLEDbrightness(uint8_t x, uint8_t brightness) {
	leds[x][0] = 224 + brightness;
}

void APALEDStrip::refresh() {
  fc:	87 01       	movw	r16, r14
  fe:	c4 e0       	ldi	r28, 0x04	; 4
	for (uint8_t i = 0; i < 4; i++) {
		SPI::SPIsend(0);
	}
	for (uint8_t i = 0; i < LEDStripX; i++) {
		for (uint8_t j = 0; j < 4; j++) {
			SPI::SPIsend(leds[i][j]);
 100:	f8 01       	movw	r30, r16
 102:	81 91       	ld	r24, Z+
 104:	8f 01       	movw	r16, r30
 106:	0e 94 a5 01 	call	0x34a	; 0x34a <_ZN3SPI7SPIsendEh>
 10a:	c1 50       	subi	r28, 0x01	; 1
void APALEDStrip::refresh() {
	for (uint8_t i = 0; i < 4; i++) {
		SPI::SPIsend(0);
	}
	for (uint8_t i = 0; i < LEDStripX; i++) {
		for (uint8_t j = 0; j < 4; j++) {
 10c:	c9 f7       	brne	.-14     	; 0x100 <_ZN11APALEDStrip7refreshEv+0x34>
 10e:	f4 e0       	ldi	r31, 0x04	; 4
 110:	ef 0e       	add	r14, r31
 112:	f1 1c       	adc	r15, r1

void APALEDStrip::refresh() {
	for (uint8_t i = 0; i < 4; i++) {
		SPI::SPIsend(0);
	}
	for (uint8_t i = 0; i < LEDStripX; i++) {
 114:	ec 14       	cp	r14, r12
 116:	fd 04       	cpc	r15, r13
 118:	89 f7       	brne	.-30     	; 0xfc <_ZN11APALEDStrip7refreshEv+0x30>
		for (uint8_t j = 0; j < 4; j++) {
			SPI::SPIsend(leds[i][j]);
		}
	}
	for (uint8_t i = 0; i < 4; i++) {
		SPI::SPIsend(0);
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	0e 94 a5 01 	call	0x34a	; 0x34a <_ZN3SPI7SPIsendEh>
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	0e 94 a5 01 	call	0x34a	; 0x34a <_ZN3SPI7SPIsendEh>
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	0e 94 a5 01 	call	0x34a	; 0x34a <_ZN3SPI7SPIsendEh>
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	0e 94 a5 01 	call	0x34a	; 0x34a <_ZN3SPI7SPIsendEh>
	}
}
 132:	cf 91       	pop	r28
 134:	1f 91       	pop	r17
 136:	0f 91       	pop	r16
 138:	ff 90       	pop	r15
 13a:	ef 90       	pop	r14
 13c:	df 90       	pop	r13
 13e:	cf 90       	pop	r12
 140:	08 95       	ret

00000142 <main>:

#include <avr/io.h>
#include <util/delay.h>
#include "APA102.h"

int main() {
 142:	cf 93       	push	r28
 144:	df 93       	push	r29
 146:	cd b7       	in	r28, 0x3d	; 61
 148:	de b7       	in	r29, 0x3e	; 62
 14a:	c0 5f       	subi	r28, 0xF0	; 240
 14c:	d1 09       	sbc	r29, r1
 14e:	0f b6       	in	r0, 0x3f	; 63
 150:	f8 94       	cli
 152:	de bf       	out	0x3e, r29	; 62
 154:	0f be       	out	0x3f, r0	; 63
 156:	cd bf       	out	0x3d, r28	; 61
    APALEDStrip strip;
 158:	ce 01       	movw	r24, r28
 15a:	01 96       	adiw	r24, 0x01	; 1
 15c:	0e 94 40 00 	call	0x80	; 0x80 <_ZN11APALEDStripC1Ev>
    strip.refresh();
 160:	ce 01       	movw	r24, r28
 162:	01 96       	adiw	r24, 0x01	; 1
 164:	0e 94 66 00 	call	0xcc	; 0xcc <_ZN11APALEDStrip7refreshEv>

#include <avr/io.h>
#include <util/delay.h>
#include "APA102.h"

int main() {
 168:	0f 2e       	mov	r0, r31
 16a:	f5 e0       	ldi	r31, 0x05	; 5
 16c:	ff 2e       	mov	r15, r31
 16e:	f0 2d       	mov	r31, r0
 170:	10 e0       	ldi	r17, 0x00	; 0
    strip.refresh();
    
    while(1) {
	    for(uint8_t i = 0; i < 5; i++) {
		    for (uint8_t j = 0; j < 60; j+=3) {
			    strip.setLED(j, 255, 0, 0, 1);
 172:	ee 24       	eor	r14, r14
 174:	e3 94       	inc	r14
 176:	00 e0       	ldi	r16, 0x00	; 0
 178:	20 e0       	ldi	r18, 0x00	; 0
 17a:	4f ef       	ldi	r20, 0xFF	; 255
 17c:	61 2f       	mov	r22, r17
 17e:	ce 01       	movw	r24, r28
 180:	01 96       	adiw	r24, 0x01	; 1
 182:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+1, 0, 255, 0, 1);
 186:	61 e0       	ldi	r22, 0x01	; 1
 188:	61 0f       	add	r22, r17
 18a:	2f ef       	ldi	r18, 0xFF	; 255
 18c:	40 e0       	ldi	r20, 0x00	; 0
 18e:	ce 01       	movw	r24, r28
 190:	01 96       	adiw	r24, 0x01	; 1
 192:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+2, 0, 0, 255, 1);
 196:	62 e0       	ldi	r22, 0x02	; 2
 198:	61 0f       	add	r22, r17
 19a:	0f ef       	ldi	r16, 0xFF	; 255
 19c:	20 e0       	ldi	r18, 0x00	; 0
 19e:	40 e0       	ldi	r20, 0x00	; 0
 1a0:	ce 01       	movw	r24, r28
 1a2:	01 96       	adiw	r24, 0x01	; 1
 1a4:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
    APALEDStrip strip;
    strip.refresh();
    
    while(1) {
	    for(uint8_t i = 0; i < 5; i++) {
		    for (uint8_t j = 0; j < 60; j+=3) {
 1a8:	1d 5f       	subi	r17, 0xFD	; 253
 1aa:	1c 33       	cpi	r17, 0x3C	; 60
 1ac:	11 f7       	brne	.-60     	; 0x172 <main+0x30>
			    strip.setLED(j, 255, 0, 0, 1);
			    strip.setLED(j+1, 0, 255, 0, 1);
			    strip.setLED(j+2, 0, 0, 255, 1);
		    }
		    strip.refresh();
 1ae:	ce 01       	movw	r24, r28
 1b0:	01 96       	adiw	r24, 0x01	; 1
 1b2:	0e 94 66 00 	call	0xcc	; 0xcc <_ZN11APALEDStrip7refreshEv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b6:	2f ef       	ldi	r18, 0xFF	; 255
 1b8:	83 ec       	ldi	r24, 0xC3	; 195
 1ba:	99 e0       	ldi	r25, 0x09	; 9
 1bc:	21 50       	subi	r18, 0x01	; 1
 1be:	80 40       	sbci	r24, 0x00	; 0
 1c0:	90 40       	sbci	r25, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <main+0x7a>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0x84>
 1c6:	00 00       	nop
		    _delay_ms(200);
		    for (uint8_t j = 0; j < 60; j+=3) {
 1c8:	10 e0       	ldi	r17, 0x00	; 0
			    strip.setLED(j, 0, 0, 0, 1);
 1ca:	ee 24       	eor	r14, r14
 1cc:	e3 94       	inc	r14
 1ce:	00 e0       	ldi	r16, 0x00	; 0
 1d0:	20 e0       	ldi	r18, 0x00	; 0
 1d2:	40 e0       	ldi	r20, 0x00	; 0
 1d4:	61 2f       	mov	r22, r17
 1d6:	ce 01       	movw	r24, r28
 1d8:	01 96       	adiw	r24, 0x01	; 1
 1da:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+1, 0, 0, 0, 1);
 1de:	61 e0       	ldi	r22, 0x01	; 1
 1e0:	61 0f       	add	r22, r17
 1e2:	20 e0       	ldi	r18, 0x00	; 0
 1e4:	40 e0       	ldi	r20, 0x00	; 0
 1e6:	ce 01       	movw	r24, r28
 1e8:	01 96       	adiw	r24, 0x01	; 1
 1ea:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+2, 0, 0, 0, 1);
 1ee:	62 e0       	ldi	r22, 0x02	; 2
 1f0:	61 0f       	add	r22, r17
 1f2:	20 e0       	ldi	r18, 0x00	; 0
 1f4:	40 e0       	ldi	r20, 0x00	; 0
 1f6:	ce 01       	movw	r24, r28
 1f8:	01 96       	adiw	r24, 0x01	; 1
 1fa:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+1, 0, 255, 0, 1);
			    strip.setLED(j+2, 0, 0, 255, 1);
		    }
		    strip.refresh();
		    _delay_ms(200);
		    for (uint8_t j = 0; j < 60; j+=3) {
 1fe:	1d 5f       	subi	r17, 0xFD	; 253
 200:	1c 33       	cpi	r17, 0x3C	; 60
 202:	19 f7       	brne	.-58     	; 0x1ca <main+0x88>
			    strip.setLED(j, 0, 0, 0, 1);
			    strip.setLED(j+1, 0, 0, 0, 1);
			    strip.setLED(j+2, 0, 0, 0, 1);
		    }
		    strip.refresh();
 204:	ce 01       	movw	r24, r28
 206:	01 96       	adiw	r24, 0x01	; 1
 208:	0e 94 66 00 	call	0xcc	; 0xcc <_ZN11APALEDStrip7refreshEv>
 20c:	2f ef       	ldi	r18, 0xFF	; 255
 20e:	83 ec       	ldi	r24, 0xC3	; 195
 210:	99 e0       	ldi	r25, 0x09	; 9
 212:	21 50       	subi	r18, 0x01	; 1
 214:	80 40       	sbci	r24, 0x00	; 0
 216:	90 40       	sbci	r25, 0x00	; 0
 218:	e1 f7       	brne	.-8      	; 0x212 <main+0xd0>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0xda>
 21c:	00 00       	nop
 21e:	fa 94       	dec	r15
int main() {
    APALEDStrip strip;
    strip.refresh();
    
    while(1) {
	    for(uint8_t i = 0; i < 5; i++) {
 220:	f1 10       	cpse	r15, r1
 222:	a6 cf       	rjmp	.-180    	; 0x170 <main+0x2e>
 224:	0f 2e       	mov	r0, r31
 226:	f7 e0       	ldi	r31, 0x07	; 7
 228:	ff 2e       	mov	r15, r31
 22a:	f0 2d       	mov	r31, r0
 22c:	10 e0       	ldi	r17, 0x00	; 0
		    _delay_ms(200);
	    }
	    
	    for(uint8_t i = 0; i < 7; i++) {
		    for (uint8_t j = 0; j < 60; j+=3) {
			    strip.setLED(j, 255, 0, 0, 1);
 22e:	ee 24       	eor	r14, r14
 230:	e3 94       	inc	r14
 232:	00 e0       	ldi	r16, 0x00	; 0
 234:	20 e0       	ldi	r18, 0x00	; 0
 236:	4f ef       	ldi	r20, 0xFF	; 255
 238:	61 2f       	mov	r22, r17
 23a:	ce 01       	movw	r24, r28
 23c:	01 96       	adiw	r24, 0x01	; 1
 23e:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+1, 0, 255, 0, 1);
 242:	61 e0       	ldi	r22, 0x01	; 1
 244:	61 0f       	add	r22, r17
 246:	2f ef       	ldi	r18, 0xFF	; 255
 248:	40 e0       	ldi	r20, 0x00	; 0
 24a:	ce 01       	movw	r24, r28
 24c:	01 96       	adiw	r24, 0x01	; 1
 24e:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+2, 0, 0, 255, 1);
 252:	62 e0       	ldi	r22, 0x02	; 2
 254:	61 0f       	add	r22, r17
 256:	0f ef       	ldi	r16, 0xFF	; 255
 258:	20 e0       	ldi	r18, 0x00	; 0
 25a:	40 e0       	ldi	r20, 0x00	; 0
 25c:	ce 01       	movw	r24, r28
 25e:	01 96       	adiw	r24, 0x01	; 1
 260:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
		    strip.refresh();
		    _delay_ms(200);
	    }
	    
	    for(uint8_t i = 0; i < 7; i++) {
		    for (uint8_t j = 0; j < 60; j+=3) {
 264:	1d 5f       	subi	r17, 0xFD	; 253
 266:	1c 33       	cpi	r17, 0x3C	; 60
 268:	11 f7       	brne	.-60     	; 0x22e <main+0xec>
			    strip.setLED(j, 255, 0, 0, 1);
			    strip.setLED(j+1, 0, 255, 0, 1);
			    strip.setLED(j+2, 0, 0, 255, 1);
		    }
		    strip.refresh();
 26a:	ce 01       	movw	r24, r28
 26c:	01 96       	adiw	r24, 0x01	; 1
 26e:	0e 94 66 00 	call	0xcc	; 0xcc <_ZN11APALEDStrip7refreshEv>
 272:	2f ef       	ldi	r18, 0xFF	; 255
 274:	81 ee       	ldi	r24, 0xE1	; 225
 276:	94 e0       	ldi	r25, 0x04	; 4
 278:	21 50       	subi	r18, 0x01	; 1
 27a:	80 40       	sbci	r24, 0x00	; 0
 27c:	90 40       	sbci	r25, 0x00	; 0
 27e:	e1 f7       	brne	.-8      	; 0x278 <main+0x136>
 280:	00 c0       	rjmp	.+0      	; 0x282 <main+0x140>
 282:	00 00       	nop
		    _delay_ms(100);
		    for (uint8_t j = 0; j < 60; j+=3) {
 284:	10 e0       	ldi	r17, 0x00	; 0
			    strip.setLED(j, 0, 0, 255, 1);
 286:	ee 24       	eor	r14, r14
 288:	e3 94       	inc	r14
 28a:	0f ef       	ldi	r16, 0xFF	; 255
 28c:	20 e0       	ldi	r18, 0x00	; 0
 28e:	40 e0       	ldi	r20, 0x00	; 0
 290:	61 2f       	mov	r22, r17
 292:	ce 01       	movw	r24, r28
 294:	01 96       	adiw	r24, 0x01	; 1
 296:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+1, 255, 0, 0, 1);
 29a:	61 e0       	ldi	r22, 0x01	; 1
 29c:	61 0f       	add	r22, r17
 29e:	00 e0       	ldi	r16, 0x00	; 0
 2a0:	20 e0       	ldi	r18, 0x00	; 0
 2a2:	4f ef       	ldi	r20, 0xFF	; 255
 2a4:	ce 01       	movw	r24, r28
 2a6:	01 96       	adiw	r24, 0x01	; 1
 2a8:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+2, 0, 255, 0, 1);
 2ac:	62 e0       	ldi	r22, 0x02	; 2
 2ae:	61 0f       	add	r22, r17
 2b0:	2f ef       	ldi	r18, 0xFF	; 255
 2b2:	40 e0       	ldi	r20, 0x00	; 0
 2b4:	ce 01       	movw	r24, r28
 2b6:	01 96       	adiw	r24, 0x01	; 1
 2b8:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+1, 0, 255, 0, 1);
			    strip.setLED(j+2, 0, 0, 255, 1);
		    }
		    strip.refresh();
		    _delay_ms(100);
		    for (uint8_t j = 0; j < 60; j+=3) {
 2bc:	1d 5f       	subi	r17, 0xFD	; 253
 2be:	1c 33       	cpi	r17, 0x3C	; 60
 2c0:	11 f7       	brne	.-60     	; 0x286 <main+0x144>
			    strip.setLED(j, 0, 0, 255, 1);
			    strip.setLED(j+1, 255, 0, 0, 1);
			    strip.setLED(j+2, 0, 255, 0, 1);
		    }
		    strip.refresh();
 2c2:	ce 01       	movw	r24, r28
 2c4:	01 96       	adiw	r24, 0x01	; 1
 2c6:	0e 94 66 00 	call	0xcc	; 0xcc <_ZN11APALEDStrip7refreshEv>
 2ca:	2f ef       	ldi	r18, 0xFF	; 255
 2cc:	81 ee       	ldi	r24, 0xE1	; 225
 2ce:	94 e0       	ldi	r25, 0x04	; 4
 2d0:	21 50       	subi	r18, 0x01	; 1
 2d2:	80 40       	sbci	r24, 0x00	; 0
 2d4:	90 40       	sbci	r25, 0x00	; 0
 2d6:	e1 f7       	brne	.-8      	; 0x2d0 <main+0x18e>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <main+0x198>
 2da:	00 00       	nop
		    _delay_ms(100);
		    for (uint8_t j = 0; j < 60; j+=3) {
 2dc:	10 e0       	ldi	r17, 0x00	; 0
			    strip.setLED(j, 0, 255, 0, 1);
 2de:	ee 24       	eor	r14, r14
 2e0:	e3 94       	inc	r14
 2e2:	00 e0       	ldi	r16, 0x00	; 0
 2e4:	2f ef       	ldi	r18, 0xFF	; 255
 2e6:	40 e0       	ldi	r20, 0x00	; 0
 2e8:	61 2f       	mov	r22, r17
 2ea:	ce 01       	movw	r24, r28
 2ec:	01 96       	adiw	r24, 0x01	; 1
 2ee:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+1, 0, 0, 255, 1);
 2f2:	61 e0       	ldi	r22, 0x01	; 1
 2f4:	61 0f       	add	r22, r17
 2f6:	0f ef       	ldi	r16, 0xFF	; 255
 2f8:	20 e0       	ldi	r18, 0x00	; 0
 2fa:	40 e0       	ldi	r20, 0x00	; 0
 2fc:	ce 01       	movw	r24, r28
 2fe:	01 96       	adiw	r24, 0x01	; 1
 300:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+2, 255, 0, 0, 1);
 304:	62 e0       	ldi	r22, 0x02	; 2
 306:	61 0f       	add	r22, r17
 308:	00 e0       	ldi	r16, 0x00	; 0
 30a:	20 e0       	ldi	r18, 0x00	; 0
 30c:	4f ef       	ldi	r20, 0xFF	; 255
 30e:	ce 01       	movw	r24, r28
 310:	01 96       	adiw	r24, 0x01	; 1
 312:	0e 94 55 00 	call	0xaa	; 0xaa <_ZN11APALEDStrip6setLEDEhhhhh>
			    strip.setLED(j+1, 255, 0, 0, 1);
			    strip.setLED(j+2, 0, 255, 0, 1);
		    }
		    strip.refresh();
		    _delay_ms(100);
		    for (uint8_t j = 0; j < 60; j+=3) {
 316:	1d 5f       	subi	r17, 0xFD	; 253
 318:	1c 33       	cpi	r17, 0x3C	; 60
 31a:	09 f7       	brne	.-62     	; 0x2de <main+0x19c>
			    strip.setLED(j, 0, 255, 0, 1);
			    strip.setLED(j+1, 0, 0, 255, 1);
			    strip.setLED(j+2, 255, 0, 0, 1);
		    }
		    strip.refresh();
 31c:	ce 01       	movw	r24, r28
 31e:	01 96       	adiw	r24, 0x01	; 1
 320:	0e 94 66 00 	call	0xcc	; 0xcc <_ZN11APALEDStrip7refreshEv>
 324:	2f ef       	ldi	r18, 0xFF	; 255
 326:	81 ee       	ldi	r24, 0xE1	; 225
 328:	94 e0       	ldi	r25, 0x04	; 4
 32a:	21 50       	subi	r18, 0x01	; 1
 32c:	80 40       	sbci	r24, 0x00	; 0
 32e:	90 40       	sbci	r25, 0x00	; 0
 330:	e1 f7       	brne	.-8      	; 0x32a <main+0x1e8>
 332:	00 c0       	rjmp	.+0      	; 0x334 <main+0x1f2>
 334:	00 00       	nop
 336:	fa 94       	dec	r15
		    }
		    strip.refresh();
		    _delay_ms(200);
	    }
	    
	    for(uint8_t i = 0; i < 7; i++) {
 338:	f1 10       	cpse	r15, r1
 33a:	78 cf       	rjmp	.-272    	; 0x22c <main+0xea>
 33c:	15 cf       	rjmp	.-470    	; 0x168 <main+0x26>

0000033e <_ZN3SPI7SPIinitEv>:

#include "SPI.h"

void SPI::SPIinit() {
	// Set MOSI, SCK, SS as Output
	DDRB |= (1 << PB5) | (1 << PB3) | (1 << PB2);
 33e:	84 b1       	in	r24, 0x04	; 4
 340:	8c 62       	ori	r24, 0x2C	; 44
 342:	84 b9       	out	0x04, r24	; 4
	
	// Enable SPI, Set as Master, Prescaler: Fosc/16
	SPCR = (1 << SPE) | (1 << MSTR) | (1 << SPR0);
 344:	81 e5       	ldi	r24, 0x51	; 81
 346:	8c bd       	out	0x2c, r24	; 44
 348:	08 95       	ret

0000034a <_ZN3SPI7SPIsendEh>:
}

void SPI::SPIsend(uint8_t data) {
	// Load data into the buffer
	SPDR = data;
 34a:	8e bd       	out	0x2e, r24	; 46
	
	// Wait until transmission complete
	while(!(SPSR & (1<<SPIF)));
 34c:	0d b4       	in	r0, 0x2d	; 45
 34e:	07 fe       	sbrs	r0, 7
 350:	fd cf       	rjmp	.-6      	; 0x34c <_ZN3SPI7SPIsendEh+0x2>
 352:	08 95       	ret

00000354 <_exit>:
 354:	f8 94       	cli

00000356 <__stop_program>:
 356:	ff cf       	rjmp	.-2      	; 0x356 <__stop_program>
